---
// This component loads all common third-party scripts and runs the global loader/transition logic
---
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/ScrollTrigger.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/ScrollSmoother.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/Draggable.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/Flip.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/MorphSVGPlugin.min.js"></script>
<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script is:inline src="https://www.youtube.com/iframe_api"></script>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function () {
        if (typeof gsap === 'undefined') { return; }
        
        // All constants are now present
        const mainContent = document.querySelector('main');
        const loader = document.getElementById('loader');
        const loaderLogo = document.getElementById('loader-logo');
        const menuToggleBtn = document.querySelector('.menu-toggle-btn');
        const pageTransitionOverlay = document.getElementById('page-transition-overlay');

        // --- LOADER ANIMATION ---
        function loaderAnimation() {
            if (!loader || !mainContent) {
                if (mainContent) mainContent.style.opacity = 1;
                document.dispatchEvent(new Event('loaderAnimationComplete'));
                return;
            }
            const tl = gsap.timeline({
                onComplete: () => {
                    gsap.set(loader, { display: "none" });
                    document.body.style.pointerEvents = 'auto';
                    document.body.style.overflow = 'auto';
                    document.dispatchEvent(new Event('loaderAnimationComplete'));
                }
            });

            tl.set(mainContent, { opacity: 0 }).set(document.body, { pointerEvents: 'none', overflow: 'hidden' });
            const logoPaths = loaderLogo ? loaderLogo.querySelectorAll('path, polygon, rect') : [];

            if (logoPaths.length > 0) {
                logoPaths.forEach(path => {
                    const length = path.getTotalLength();
                    gsap.set(path, { strokeDasharray: length, strokeDashoffset: length });
                });
                tl.to(logoPaths, { strokeDashoffset: 0, duration: 2, stagger: 0.05, ease: "power1.inOut" });
                tl.to(logoPaths, { fill: "var(--primary)", duration: 0.5, ease: "power1.inOut" }, "-=0.5");
                tl.to(loader, { opacity: 0, duration: 0.8, ease: "power2.out", delay: 0.3 });
            } else {
                tl.to(loader, { opacity: 0, duration: 0.8, ease: "power2.out", delay: 1 });
            }
            tl.to(mainContent, { opacity: 1, duration: 1, ease: "power2.out" }, "<");
            if (menuToggleBtn) {
                tl.to(menuToggleBtn, { opacity: 1, duration: 1, ease: "power2.out" }, "<");
            }
        }
        gsap.delayedCall(0.05, loaderAnimation);

        // --- PAGE TRANSITION ---
        function pageTransition(targetUrl) {
            // This function now works because 'pageTransitionOverlay' is defined
            if (!pageTransitionOverlay) {
                window.location.href = targetUrl;
                return;
            }
            const tl = gsap.timeline({ onComplete: () => window.location.href = targetUrl });
            tl.to(mainContent, { opacity: 0, duration: 0.4 });
            tl.set(pageTransitionOverlay, { x: '100%', visibility: 'visible' });
            tl.to(pageTransitionOverlay, { x: '0%', duration: 0.8, ease: "power2.inOut" });
        }

        document.body.addEventListener('click', (e) => {
            const target = e.target.closest('a');
            if (target && target.href && !target.target && !target.classList.contains('no-transition') && new URL(target.href, window.location.origin).origin === window.location.origin) {
                if (target.pathname === window.location.pathname && target.hash) return;
                e.preventDefault();
                pageTransition(target.href);
            }
        });
    });

    
</script>